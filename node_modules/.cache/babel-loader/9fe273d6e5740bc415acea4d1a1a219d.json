{"ast":null,"code":"var _jsxFileName = \"/Users/justinluczak/Documents/COURS CNAM 2EME ANNEE/webmobile/github/luczak-justin_todo-list/src/pages/Home.tsx\";\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonList, IonItem, IonLabel, IonInput, IonButton, IonCheckbox, IonIcon, IonSegment, IonSegmentButton, IonBadge, IonActionSheet } from '@ionic/react';\nimport React from 'react';\nimport './Home.css';\nimport { useToDoList } from '../hooks/useToDoList';\nimport { useState } from \"react\";\nimport { create, trash, close } from 'ionicons/icons'; //import { setConstantValue } from 'typescript';\n\nconst Home = () => {\n  const {\n    addItem,\n    listItems,\n    toggleItem,\n    removeAllItems,\n    counterTodo,\n    setCounterTodo,\n    removeCounterTodo,\n    addCounterTodo,\n    removeItem\n  } = useToDoList(); // texte à ajouter pour un nouvel item\n\n  const [text, setText] = useState(); // état du tri de la liste\n\n  let [segmentValue, setSegmentValue] = useState('all');\n  let [itemToDelete, setItemToDelete] = useState();\n  let [showActionSheet, setShowActionSheet] = useState(false);\n\n  const displayItems = value => {\n    // afficher un message différent si la liste est vide\n    if (listItems.length === 0) {\n      return /*#__PURE__*/React.createElement(IonItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(IonLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 23\n        }\n      }, \"F\\xE9licitation votre liste est vide\"));\n    } else {\n      // afficher tous les items\n      if (value === 'all') {\n        return listItems.map(item => {\n          console.log('item id :', item.id);\n\n          if (item.checked === false) {\n            console.log('item id dans le if :', item.id);\n            return /*#__PURE__*/React.createElement(IonItem, {\n              key: item.id,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(IonCheckbox, {\n              slot: \"start\",\n              color: \"primary\",\n              checked: item.checked,\n              onIonChange: e => {\n                toggleItem(item.id);\n                removeCounterTodo();\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }\n            }), /*#__PURE__*/React.createElement(IonLabel, {\n              className: item.checked ? 'checked' : '',\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }\n            }, item.text), /*#__PURE__*/React.createElement(IonButton, {\n              onClick: () => {\n                setShowActionSheet(true);\n                setItemToDelete(item.id);\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(IonIcon, {\n              icon: create,\n              color: \"light\",\n              slot: \"end\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 22\n              }\n            })), /*#__PURE__*/React.createElement(IonActionSheet, {\n              isOpen: showActionSheet,\n              onDidDismiss: () => setShowActionSheet(false),\n              cssClass: \"my-custom-class\",\n              buttons: [{\n                text: 'Supprimer',\n                role: 'destructive',\n                icon: trash,\n                handler: () => {\n                  console.log('Supprimer', item.id);\n                  removeItem(item.id);\n                }\n              }, {\n                text: 'Modifier',\n                icon: create,\n                handler: () => {\n                  console.log('MODIFIER ', itemToDelete);\n                }\n              }, {\n                text: 'Annuler',\n                icon: close,\n                role: 'cancel',\n                handler: () => {\n                  console.log('Annuler');\n                }\n              }],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }\n            }));\n          } else {\n            return /*#__PURE__*/React.createElement(IonItem, {\n              key: item.id,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(IonCheckbox, {\n              slot: \"start\",\n              color: \"primary\",\n              checked: item.checked,\n              onIonChange: e => {\n                toggleItem(item.id);\n                addCounterTodo();\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }\n            }), /*#__PURE__*/React.createElement(IonLabel, {\n              className: item.checked ? 'checked' : '',\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }\n            }, item.text), /*#__PURE__*/React.createElement(IonButton, {\n              onClick: () => setShowActionSheet(true),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(IonIcon, {\n              icon: create,\n              color: \"light\",\n              slot: \"end\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 69\n              }\n            })), /*#__PURE__*/React.createElement(IonActionSheet, {\n              isOpen: showActionSheet,\n              onDidDismiss: () => setShowActionSheet(false),\n              cssClass: \"my-custom-class\",\n              buttons: [{\n                text: 'Supprimer',\n                role: 'destructive',\n                icon: trash,\n                handler: () => {\n                  console.log('Supprimer', item.id);\n                  removeItem(item.id);\n                }\n              }, {\n                text: 'Modifier',\n                icon: create,\n                handler: () => {\n                  console.log('Modifier', item.id);\n                }\n              }, {\n                text: 'Annuler',\n                icon: close,\n                role: 'cancel',\n                handler: () => {\n                  console.log('Annuler');\n                }\n              }],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }\n            }));\n          }\n        });\n      } // afficher les items non-checké\n      else if (value === 'unchecked') {\n          console.log('oui on y est');\n          return listItems.map(item => {\n            if (item.checked === false) {\n              console.log('on y est', item.text);\n              return /*#__PURE__*/React.createElement(IonItem, {\n                key: item.id,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 17\n                }\n              }, /*#__PURE__*/React.createElement(IonCheckbox, {\n                slot: \"start\",\n                color: \"primary\",\n                checked: item.checked,\n                onIonChange: e => {\n                  toggleItem(item.id);\n                  removeCounterTodo();\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }\n              }), /*#__PURE__*/React.createElement(IonLabel, {\n                className: item.checked ? 'checked' : '',\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 19\n                }\n              }, item.text), /*#__PURE__*/React.createElement(IonButton, {\n                onClick: () => setShowActionSheet(true),\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }\n              }, /*#__PURE__*/React.createElement(IonIcon, {\n                icon: create,\n                color: \"light\",\n                slot: \"end\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 71\n                }\n              })), /*#__PURE__*/React.createElement(IonActionSheet, {\n                isOpen: showActionSheet,\n                onDidDismiss: () => setShowActionSheet(false),\n                cssClass: \"my-custom-class\",\n                buttons: [{\n                  text: 'Supprimer',\n                  role: 'destructive',\n                  icon: trash,\n                  handler: () => {\n                    console.log('Supprimer');\n                    removeItem(item.id);\n                  }\n                }, {\n                  text: 'Modifier',\n                  icon: create,\n                  handler: () => {\n                    console.log('Modifier', item.id);\n                  }\n                }, {\n                  text: 'Annuler',\n                  icon: close,\n                  role: 'cancel',\n                  handler: () => {\n                    console.log('Annuler');\n                  }\n                }],\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }\n              }));\n            }\n          });\n        }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, \"To do list\"))), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    collapse: \"condense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, \"To do list\"))), /*#__PURE__*/React.createElement(IonSegment, {\n    onIonChange: e => setSegmentValue(e.detail.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, \"Tout\")), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"unchecked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, \"\\xC0 faire \", /*#__PURE__*/React.createElement(IonBadge, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 31\n    }\n  }, counterTodo)))), /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  }, displayItems(segmentValue)), /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"primary\",\n    type: \"submit\",\n    onClick: () => {\n      removeAllItems();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, \"Vider totalement la liste\")), /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    placeholder: \"Qu'avez-vous en t\\xEAte ?\",\n    inputmode: \"text\",\n    clearInput: true,\n    autofocus: true,\n    required: true,\n    onIonChange: e => {\n      setText(e.detail.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(IonButton, {\n    color: \"primary\",\n    type: \"submit\",\n    onClick: () => {\n      addItem(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, \"Cr\\xE9er\"))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/justinluczak/Documents/COURS CNAM 2EME ANNEE/webmobile/github/luczak-justin_todo-list/src/pages/Home.tsx"],"names":["IonContent","IonHeader","IonPage","IonTitle","IonToolbar","IonList","IonItem","IonLabel","IonInput","IonButton","IonCheckbox","IonIcon","IonSegment","IonSegmentButton","IonBadge","IonActionSheet","React","useToDoList","useState","create","trash","close","Home","addItem","listItems","toggleItem","removeAllItems","counterTodo","setCounterTodo","removeCounterTodo","addCounterTodo","removeItem","text","setText","segmentValue","setSegmentValue","itemToDelete","setItemToDelete","showActionSheet","setShowActionSheet","displayItems","value","length","map","item","console","log","id","checked","e","role","icon","handler","detail"],"mappings":"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","sourcesContent":["import { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonList, IonItem, IonLabel, IonInput, IonButton, IonCheckbox, IonIcon, IonSegment, IonSegmentButton, IonBadge, IonActionSheet } from '@ionic/react';\nimport React, { useEffect } from 'react';\nimport './Home.css';\nimport { useToDoList } from '../hooks/useToDoList';\nimport { useState } from \"react\";\nimport { create, trash, close } from 'ionicons/icons';\n//import { setConstantValue } from 'typescript';\n\nconst Home: React.FC = () => {\n\n  const { addItem, listItems, toggleItem, removeAllItems, counterTodo, setCounterTodo, removeCounterTodo, addCounterTodo, removeItem } = useToDoList();\n\n  // texte à ajouter pour un nouvel item\n  const [text, setText] = useState<any>();\n\n  // état du tri de la liste\n  let [segmentValue, setSegmentValue] = useState('all');\n\n  let [itemToDelete, setItemToDelete] = useState<number>();\n\n  let [showActionSheet, setShowActionSheet] = useState(false);\n\n  const displayItems = (value) => {\n\n    // afficher un message différent si la liste est vide\n    if (listItems.length === 0) {\n      return <IonItem><IonLabel>Félicitation votre liste est vide</IonLabel></IonItem>\n    }\n\n\n    else {\n\n      // afficher tous les items\n      if (value === 'all') {\n\n\n        return listItems.map((item) => {\n          console.log('item id :',item.id)\n          if (item.checked === false) {\n            console.log('item id dans le if :',item.id)\n            return (\n              \n              <IonItem key={item.id}>\n                <IonCheckbox slot=\"start\" color=\"primary\" checked={item.checked} onIonChange={(e) => {\n                  toggleItem(item.id)\n                  removeCounterTodo()\n                }} />\n                <IonLabel className={item.checked ? 'checked' : ''}>{item.text}</IonLabel>\n\n                <IonButton onClick={() => {\n                  setShowActionSheet(true)\n                  setItemToDelete(item.id)\n                  }}><IonIcon icon={create} color=\"light\" slot=\"end\" /></IonButton>\n\n\n                <IonActionSheet\n                  isOpen={showActionSheet}\n                  onDidDismiss={() => setShowActionSheet(false)}\n                  cssClass='my-custom-class'\n                  buttons={[{\n                    text: 'Supprimer',\n                    role: 'destructive',\n                    icon: trash,\n                    handler: () => {\n                      console.log('Supprimer', item.id);\n                      removeItem(item.id)\n                    }\n                  },\n                  {\n                    text: 'Modifier',\n                    icon: create,\n                    handler: () => {\n                      console.log('MODIFIER ', itemToDelete);\n                    }\n                  }, {\n                    text: 'Annuler',\n                    icon: close,\n                    role: 'cancel',\n                    handler: () => {\n                      console.log('Annuler');\n                    }\n                  }]}\n                >\n                </IonActionSheet>\n              </IonItem>\n            )\n          }\n\n          else {\n            return (\n              <IonItem key={item.id}>\n                <IonCheckbox slot=\"start\" color=\"primary\" checked={item.checked} onIonChange={(e) => {\n                  toggleItem(item.id)\n                  addCounterTodo()\n                }} />\n                <IonLabel className={item.checked ? 'checked' : ''}>{item.text}</IonLabel>\n\n                <IonButton onClick={() => setShowActionSheet(true)}><IonIcon icon={create} color=\"light\" slot=\"end\" /></IonButton>\n\n\n                <IonActionSheet\n                  isOpen={showActionSheet}\n                  onDidDismiss={() => setShowActionSheet(false)}\n                  cssClass='my-custom-class'\n                  buttons={[{\n                    text: 'Supprimer',\n                    role: 'destructive',\n                    icon: trash,\n                    handler: () => {\n                      console.log('Supprimer', item.id);\n                      removeItem(item.id)\n                    }\n                  },\n                  {\n                    text: 'Modifier',\n                    icon: create,\n                    handler: () => {\n                      console.log('Modifier', item.id);\n                    }\n                  }, {\n                    text: 'Annuler',\n                    icon: close,\n                    role: 'cancel',\n                    handler: () => {\n                      console.log('Annuler');\n                    }\n                  }]}\n                >\n                </IonActionSheet>\n              </IonItem>\n            )\n          }\n\n        }\n        )\n      }\n\n      // afficher les items non-checké\n      else if (value === 'unchecked') {\n        console.log('oui on y est')\n        return (\n          listItems.map((item) => {\n            if (item.checked === false) {\n              console.log('on y est', item.text)\n              return (\n                < IonItem key={item.id} >\n                  <IonCheckbox slot=\"start\" color=\"primary\" checked={item.checked} onIonChange={(e) => {\n                    toggleItem(item.id)\n                    removeCounterTodo()\n                  }} />\n                  <IonLabel className={item.checked ? 'checked' : ''}>{item.text}</IonLabel>\n\n                  <IonButton onClick={() => setShowActionSheet(true)}><IonIcon icon={create} color=\"light\" slot=\"end\" /></IonButton>\n\n\n                  <IonActionSheet\n                    isOpen={showActionSheet}\n                    onDidDismiss={() => setShowActionSheet(false)}\n                    cssClass='my-custom-class'\n                    buttons={[{\n                      text: 'Supprimer',\n                      role: 'destructive',\n                      icon: trash,\n                      handler: () => {\n                        console.log('Supprimer');\n                        removeItem(item.id)\n                      }\n                    },\n                    {\n                      text: 'Modifier',\n                      icon: create,\n                      handler: () => {\n                        console.log('Modifier', item.id);\n                      }\n                    }, {\n                      text: 'Annuler',\n                      icon: close,\n                      role: 'cancel',\n                      handler: () => {\n                        console.log('Annuler');\n                      }\n                    }]}\n                  >\n                  </IonActionSheet>\n                </IonItem >\n              )\n            }\n          }))\n      }\n    }\n\n  }\n\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>To do list</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">To do list</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n        <IonSegment onIonChange={e => setSegmentValue(e.detail.value)}>\n          <IonSegmentButton value=\"all\">\n            <IonLabel>Tout</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value=\"unchecked\">\n            <IonLabel>À faire <IonBadge color=\"primary\">{counterTodo}</IonBadge></IonLabel>\n\n          </IonSegmentButton>\n        </IonSegment>\n\n\n        <IonList>\n          {\n            displayItems(segmentValue)\n          }\n        </IonList>\n\n\n        <IonItem>\n          <IonButton color=\"primary\" type=\"submit\" onClick={() => { removeAllItems() }}>Vider totalement la liste</IonButton>\n        </IonItem>\n\n\n\n        <IonItem>\n          <IonInput placeholder=\"Qu'avez-vous en tête ?\" inputmode=\"text\" clearInput autofocus required onIonChange={e => { setText(e.detail.value); }}></IonInput>\n          <IonButton color=\"primary\" type=\"submit\" onClick={() => { addItem(text) }}>Créer</IonButton>\n        </IonItem>\n\n\n\n      </IonContent>\n\n\n    </IonPage>\n  );\n};\n\n\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}