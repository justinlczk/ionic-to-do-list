{"ast":null,"code":"var _jsxFileName = \"/Users/justinluczak/Documents/COURS CNAM 2EME ANNEE/webmobile/github/luczak-justin_todo-list/src/pages/Home.tsx\";\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonList, IonItem, IonLabel, IonInput, IonButton, IonCheckbox, IonIcon, IonSegment, IonSegmentButton, IonBadge, IonActionSheet, IonAlert } from '@ionic/react';\nimport React from 'react';\nimport './Home.css';\nimport { useToDoList } from '../hooks/useToDoList';\nimport { useState } from \"react\";\nimport { create, trash, close } from 'ionicons/icons'; //import { setConstantValue } from 'typescript';\n\nconst Home = () => {\n  const {\n    addItem,\n    listItems,\n    toggleItem,\n    removeAllItems,\n    counterTodo,\n    setCounterTodo,\n    removeCounterTodo,\n    addCounterTodo,\n    removeItem,\n    modifieItem\n  } = useToDoList(); // texte à ajouter pour un nouvel item\n\n  const [text, setText] = useState(); // état du tri de la liste\n\n  let [segmentValue, setSegmentValue] = useState('all');\n  let [itemToDelete, setItemToDelete] = useState();\n  let [showActionSheet, setShowActionSheet] = useState(false);\n  let [showModifieAlert, setShowModifieAlert] = useState(false);\n  let [itemToModifie, setItemToModifie] = useState();\n  let [textAlert, setTextAlert] = useState('');\n\n  const displayItems = value => {\n    // afficher un message différent si la liste est vide\n    if (listItems.length === 0) {\n      return /*#__PURE__*/React.createElement(IonItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(IonLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 23\n        }\n      }, \"F\\xE9licitation votre liste est vide\"));\n    } else {\n      // afficher tous les items\n      if (value === 'all') {\n        return listItems.map(item => {\n          if (item != undefined && item.checked === false) {\n            return /*#__PURE__*/React.createElement(IonItem, {\n              key: item.id,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(IonCheckbox, {\n              slot: \"start\",\n              color: \"primary\",\n              checked: item.checked,\n              onIonChange: e => {\n                toggleItem(item.id);\n                removeCounterTodo();\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }\n            }), /*#__PURE__*/React.createElement(IonLabel, {\n              className: item.checked ? 'checked' : '',\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }\n            }, item.text), /*#__PURE__*/React.createElement(IonButton, {\n              onClick: () => {\n                setShowActionSheet(true);\n                setItemToDelete(item.id);\n                setItemToModifie(item.id);\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(IonIcon, {\n              icon: create,\n              color: \"light\",\n              slot: \"end\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 20\n              }\n            })), /*#__PURE__*/React.createElement(IonActionSheet, {\n              isOpen: showActionSheet,\n              onDidDismiss: () => setShowActionSheet(false),\n              cssClass: \"my-custom-class\",\n              buttons: [{\n                text: 'Supprimer',\n                role: 'destructive',\n                icon: trash,\n                handler: () => {\n                  console.log('Supprimer');\n                  removeItem(itemToDelete);\n                }\n              }, {\n                text: 'Modifier',\n                icon: create,\n                handler: () => {\n                  console.log('MODIFIER !!!!!', itemToDelete);\n                  setShowModifieAlert(true);\n                }\n              }, {\n                text: 'Annuler',\n                icon: close,\n                role: 'cancel',\n                handler: () => {\n                  console.log('Annuler');\n                }\n              }],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }\n            }), /*#__PURE__*/React.createElement(IonAlert, {\n              isOpen: showModifieAlert,\n              onDidDismiss: () => setShowModifieAlert(false),\n              message: 'Renommez votre tâche',\n              header: 'Prompt!',\n              inputs: [{\n                name: 'text',\n                type: 'text',\n                placeholder: 'Nouveau nom de l\\'item',\n                id: 'textToChange',\n                handler: () => {}\n              }],\n              buttons: [{\n                text: 'Annuler',\n                role: 'cancel',\n                cssClass: 'secondary',\n                handler: () => {\n                  console.log('Confirm Cancel');\n                }\n              }, {\n                text: 'Valider',\n                handler: () => {\n                  console.log('Confirm Ok');\n                  setTextAlert(value);\n                  console.log('textAlert == ', textAlert);\n                  modifieItem(itemToModifie, textAlert);\n                }\n              }],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }\n            }));\n          } else if (item != undefined) {\n            return /*#__PURE__*/React.createElement(IonItem, {\n              key: item.id,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(IonCheckbox, {\n              slot: \"start\",\n              color: \"primary\",\n              checked: item.checked,\n              onIonChange: e => {\n                toggleItem(item.id);\n                addCounterTodo();\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }\n            }), /*#__PURE__*/React.createElement(IonLabel, {\n              className: item.checked ? 'checked' : '',\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }\n            }, item.text), /*#__PURE__*/React.createElement(IonButton, {\n              onClick: () => {\n                setShowActionSheet(true);\n                setItemToDelete(item.id);\n                setItemToModifie(item.id);\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(IonIcon, {\n              icon: create,\n              color: \"light\",\n              slot: \"end\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 20\n              }\n            })), /*#__PURE__*/React.createElement(IonActionSheet, {\n              isOpen: showActionSheet,\n              onDidDismiss: () => setShowActionSheet(false),\n              cssClass: \"my-custom-class\",\n              buttons: [{\n                text: 'Supprimer',\n                role: 'destructive',\n                icon: trash,\n                handler: () => {\n                  console.log('Supprimer');\n                  removeItem(itemToDelete);\n                }\n              }, {\n                text: 'Modifier',\n                icon: create,\n                handler: () => {\n                  console.log('MODIFIER !!!!!', itemToDelete);\n                  setShowModifieAlert(true);\n                }\n              }, {\n                text: 'Annuler',\n                icon: close,\n                role: 'cancel',\n                handler: () => {\n                  console.log('Annuler');\n                }\n              }],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }\n            }), /*#__PURE__*/React.createElement(IonAlert, {\n              isOpen: showModifieAlert,\n              onDidDismiss: () => setShowModifieAlert(false),\n              message: 'Renommez votre tâche',\n              header: 'Prompt!',\n              inputs: [{\n                name: 'text',\n                type: 'text',\n                placeholder: 'Nouveau nom de l\\'item',\n                id: 'textToChange'\n              }],\n              buttons: [{\n                text: 'Annuler',\n                role: 'cancel',\n                cssClass: 'secondary',\n                handler: () => {\n                  console.log('Confirm Cancel');\n                }\n              }, {\n                text: 'Valider',\n                handler: () => {\n                  console.log('Confirm Ok');\n                  setTextAlert(value);\n                  console.log('textAlert == ', textAlert);\n                  modifieItem(itemToModifie, textAlert);\n                }\n              }],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }\n            }));\n          }\n        });\n      } // afficher les items non-checké\n      else if (value === 'unchecked') {\n          return listItems.map(item => {\n            if (item != undefined && item.checked === false) {\n              return /*#__PURE__*/React.createElement(IonItem, {\n                key: item.id,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 17\n                }\n              }, /*#__PURE__*/React.createElement(IonCheckbox, {\n                slot: \"start\",\n                color: \"primary\",\n                checked: item.checked,\n                onIonChange: e => {\n                  toggleItem(item.id);\n                  removeCounterTodo();\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 19\n                }\n              }), /*#__PURE__*/React.createElement(IonLabel, {\n                className: item.checked ? 'checked' : '',\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }\n              }, item.text), /*#__PURE__*/React.createElement(IonButton, {\n                onClick: () => {\n                  setShowActionSheet(true);\n                  setItemToDelete(item.id);\n                  setItemToModifie(item.id);\n                },\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 19\n                }\n              }, /*#__PURE__*/React.createElement(IonIcon, {\n                icon: create,\n                color: \"light\",\n                slot: \"end\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 22\n                }\n              })), /*#__PURE__*/React.createElement(IonActionSheet, {\n                isOpen: showActionSheet,\n                onDidDismiss: () => setShowActionSheet(false),\n                cssClass: \"my-custom-class\",\n                buttons: [{\n                  text: 'Supprimer',\n                  role: 'destructive',\n                  icon: trash,\n                  handler: () => {\n                    console.log('Supprimer');\n                    removeItem(itemToDelete);\n                  }\n                }, {\n                  text: 'Modifier',\n                  icon: create,\n                  handler: () => {\n                    console.log('MODIFIER !!!!!', itemToDelete);\n                    setShowModifieAlert(true);\n                  }\n                }, {\n                  text: 'Annuler',\n                  icon: close,\n                  role: 'cancel',\n                  handler: () => {\n                    console.log('Annuler');\n                  }\n                }],\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 19\n                }\n              }), /*#__PURE__*/React.createElement(IonAlert, {\n                isOpen: showModifieAlert,\n                onDidDismiss: () => setShowModifieAlert(false),\n                message: 'Renommez votre tâche',\n                header: 'Prompt!',\n                inputs: [{\n                  name: 'text',\n                  type: 'text',\n                  placeholder: 'Nouveau nom de l\\'item',\n                  id: 'textToChange'\n                }],\n                buttons: [{\n                  text: 'Annuler',\n                  role: 'cancel',\n                  cssClass: 'secondary',\n                  handler: () => {\n                    console.log('Confirm Cancel');\n                  }\n                }, {\n                  text: 'Valider',\n                  handler: () => {\n                    console.log('Confirm Ok');\n                    setTextAlert(value);\n                    console.log('textAlert == ', textAlert);\n                    modifieItem(itemToModifie, textAlert);\n                  }\n                }],\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 19\n                }\n              }));\n            }\n          });\n        }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 11\n    }\n  }, \"To do list\"))), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    collapse: \"condense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  }, \"To do list\"))), /*#__PURE__*/React.createElement(IonSegment, {\n    onIonChange: e => setSegmentValue(e.detail.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  }, \"Tout\")), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"unchecked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  }, \"\\xC0 faire \", /*#__PURE__*/React.createElement(IonBadge, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 31\n    }\n  }, counterTodo)))), /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 9\n    }\n  }, displayItems(segmentValue)), /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"primary\",\n    type: \"submit\",\n    onClick: () => {\n      removeAllItems();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 11\n    }\n  }, \"Vider totalement la liste\")), /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    placeholder: \"Qu'avez-vous en t\\xEAte ?\",\n    inputmode: \"text\",\n    clearInput: true,\n    autofocus: true,\n    required: true,\n    onIonChange: e => {\n      setText(e.detail.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(IonButton, {\n    color: \"primary\",\n    type: \"submit\",\n    onClick: () => {\n      addItem(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 11\n    }\n  }, \"Cr\\xE9er\"))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/justinluczak/Documents/COURS CNAM 2EME ANNEE/webmobile/github/luczak-justin_todo-list/src/pages/Home.tsx"],"names":["IonContent","IonHeader","IonPage","IonTitle","IonToolbar","IonList","IonItem","IonLabel","IonInput","IonButton","IonCheckbox","IonIcon","IonSegment","IonSegmentButton","IonBadge","IonActionSheet","IonAlert","React","useToDoList","useState","create","trash","close","Home","addItem","listItems","toggleItem","removeAllItems","counterTodo","setCounterTodo","removeCounterTodo","addCounterTodo","removeItem","modifieItem","text","setText","segmentValue","setSegmentValue","itemToDelete","setItemToDelete","showActionSheet","setShowActionSheet","showModifieAlert","setShowModifieAlert","itemToModifie","setItemToModifie","textAlert","setTextAlert","displayItems","value","length","map","item","undefined","checked","id","e","role","icon","handler","console","log","name","type","placeholder","cssClass","detail"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,OAAhC,EAAyCC,QAAzC,EAAmDC,UAAnD,EAA+DC,OAA/D,EAAwEC,OAAxE,EAAiFC,QAAjF,EAA2FC,QAA3F,EAAqGC,SAArG,EAAgHC,WAAhH,EAA6HC,OAA7H,EAAsIC,UAAtI,EAAkJC,gBAAlJ,EAAoKC,QAApK,EAA8KC,cAA9K,EAA8LC,QAA9L,QAA8M,cAA9M;AACA,OAAOC,KAAP,MAAiC,OAAjC;AACA,OAAO,YAAP;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,KAAxB,QAAqC,gBAArC,C,CACA;;AAEA,MAAMC,IAAc,GAAG,MAAM;AAE3B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,SAAX;AAAsBC,IAAAA,UAAtB;AAAkCC,IAAAA,cAAlC;AAAkDC,IAAAA,WAAlD;AAA+DC,IAAAA,cAA/D;AAA+EC,IAAAA,iBAA/E;AAAkGC,IAAAA,cAAlG;AAAkHC,IAAAA,UAAlH;AAA8HC,IAAAA;AAA9H,MAA8If,WAAW,EAA/J,CAF2B,CAI3B;;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,EAAhC,CAL2B,CAO3B;;AACA,MAAI,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,KAAD,CAA9C;AAEA,MAAI,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,EAA9C;AAEA,MAAI,CAACqB,eAAD,EAAkBC,kBAAlB,IAAwCtB,QAAQ,CAAC,KAAD,CAApD;AAEA,MAAI,CAACuB,gBAAD,EAAmBC,mBAAnB,IAA0CxB,QAAQ,CAAC,KAAD,CAAtD;AAEA,MAAI,CAACyB,aAAD,EAAgBC,gBAAhB,IAAoC1B,QAAQ,EAAhD;AAEA,MAAI,CAAC2B,SAAD,EAAYC,YAAZ,IAA4B5B,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAM6B,YAAY,GAAIC,KAAD,IAAW;AAE9B;AACA,QAAIxB,SAAS,CAACyB,MAAV,KAAqB,CAAzB,EAA4B;AAC1B,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAS,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAT,CAAP;AACD,KAFD,MAKK;AAEH;AACA,UAAID,KAAK,KAAK,KAAd,EAAqB;AAGnB,eAAOxB,SAAS,CAAC0B,GAAV,CAAeC,IAAD,IAAU;AAC7B,cAAIA,IAAI,IAAIC,SAAR,IAAqBD,IAAI,CAACE,OAAL,KAAiB,KAA1C,EAAiD;AAC/C,gCAEE,oBAAC,OAAD;AAAS,cAAA,GAAG,EAAEF,IAAI,CAACG,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE,oBAAC,WAAD;AAAa,cAAA,IAAI,EAAC,OAAlB;AAA0B,cAAA,KAAK,EAAC,SAAhC;AAA0C,cAAA,OAAO,EAAEH,IAAI,CAACE,OAAxD;AAAiE,cAAA,WAAW,EAAGE,CAAD,IAAO;AACnF9B,gBAAAA,UAAU,CAAC0B,IAAI,CAACG,EAAN,CAAV;AACAzB,gBAAAA,iBAAiB;AAClB,eAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,oBAAC,QAAD;AAAU,cAAA,SAAS,EAAEsB,IAAI,CAACE,OAAL,GAAe,SAAf,GAA2B,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAqDF,IAAI,CAAClB,IAA1D,CALF,eAOE,oBAAC,SAAD;AAAW,cAAA,OAAO,EAAE,MAAM;AACxBO,gBAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAF,gBAAAA,eAAe,CAACa,IAAI,CAACG,EAAN,CAAf;AACAV,gBAAAA,gBAAgB,CAACO,IAAI,CAACG,EAAN,CAAhB;AACD,eAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAIG,oBAAC,OAAD;AAAS,cAAA,IAAI,EAAEnC,MAAf;AAAuB,cAAA,KAAK,EAAC,OAA7B;AAAqC,cAAA,IAAI,EAAC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJH,CAPF,eAcE,oBAAC,cAAD;AACE,cAAA,MAAM,EAAEoB,eADV;AAEE,cAAA,YAAY,EAAE,MAAMC,kBAAkB,CAAC,KAAD,CAFxC;AAGE,cAAA,QAAQ,EAAC,iBAHX;AAIE,cAAA,OAAO,EAAE,CAAC;AACRP,gBAAAA,IAAI,EAAE,WADE;AAERuB,gBAAAA,IAAI,EAAE,aAFE;AAGRC,gBAAAA,IAAI,EAAErC,KAHE;AAIRsC,gBAAAA,OAAO,EAAE,MAAM;AACbC,kBAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA7B,kBAAAA,UAAU,CAACM,YAAD,CAAV;AAED;AARO,eAAD,EAUT;AACEJ,gBAAAA,IAAI,EAAE,UADR;AAEEwB,gBAAAA,IAAI,EAAEtC,MAFR;AAGEuC,gBAAAA,OAAO,EAAE,MAAM;AACbC,kBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BvB,YAA9B;AACAK,kBAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD;AANH,eAVS,EAiBN;AACDT,gBAAAA,IAAI,EAAE,SADL;AAEDwB,gBAAAA,IAAI,EAAEpC,KAFL;AAGDmC,gBAAAA,IAAI,EAAE,QAHL;AAIDE,gBAAAA,OAAO,EAAE,MAAM;AACbC,kBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;AANA,eAjBM,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eAgDE,oBAAC,QAAD;AACI,cAAA,MAAM,EAAEnB,gBADZ;AAEI,cAAA,YAAY,EAAE,MAAMC,mBAAmB,CAAC,KAAD,CAF3C;AAGI,cAAA,OAAO,EAAE,sBAHb;AAII,cAAA,MAAM,EAAE,SAJZ;AAKI,cAAA,MAAM,EAAE,CACN;AAEEmB,gBAAAA,IAAI,EAAE,MAFR;AAGEC,gBAAAA,IAAI,EAAE,MAHR;AAIEC,gBAAAA,WAAW,EAAE,wBAJf;AAKET,gBAAAA,EAAE,EAAE,cALN;AAMEI,gBAAAA,OAAO,EAAE,MAAM,CAAE;AANnB,eADM,CALZ;AAeI,cAAA,OAAO,EAAE,CACP;AACEzB,gBAAAA,IAAI,EAAE,SADR;AAEEuB,gBAAAA,IAAI,EAAE,QAFR;AAGEQ,gBAAAA,QAAQ,EAAE,WAHZ;AAIEN,gBAAAA,OAAO,EAAE,MAAM;AACbC,kBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AANH,eADO,EASP;AACE3B,gBAAAA,IAAI,EAAE,SADR;AAEEyB,gBAAAA,OAAO,EAAE,MAAM;AACbC,kBAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAd,kBAAAA,YAAY,CAACE,KAAD,CAAZ;AACAW,kBAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6Bf,SAA7B;AACAb,kBAAAA,WAAW,CAACW,aAAD,EAAgBE,SAAhB,CAAX;AAED;AARH,eATO,CAfb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhDF,CAFF;AAwFD,WAzFD,MA2FK,IAAIM,IAAI,IAAIC,SAAZ,EAAuB;AAC1B,gCACE,oBAAC,OAAD;AAAS,cAAA,GAAG,EAAED,IAAI,CAACG,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE,oBAAC,WAAD;AAAa,cAAA,IAAI,EAAC,OAAlB;AAA0B,cAAA,KAAK,EAAC,SAAhC;AAA0C,cAAA,OAAO,EAAEH,IAAI,CAACE,OAAxD;AAAiE,cAAA,WAAW,EAAGE,CAAD,IAAO;AACnF9B,gBAAAA,UAAU,CAAC0B,IAAI,CAACG,EAAN,CAAV;AACAxB,gBAAAA,cAAc;AACf,eAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,oBAAC,QAAD;AAAU,cAAA,SAAS,EAAEqB,IAAI,CAACE,OAAL,GAAe,SAAf,GAA2B,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAqDF,IAAI,CAAClB,IAA1D,CALF,eAOE,oBAAC,SAAD;AAAW,cAAA,OAAO,EAAE,MAAM;AACxBO,gBAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAF,gBAAAA,eAAe,CAACa,IAAI,CAACG,EAAN,CAAf;AACAV,gBAAAA,gBAAgB,CAACO,IAAI,CAACG,EAAN,CAAhB;AACD,eAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAIG,oBAAC,OAAD;AAAS,cAAA,IAAI,EAAEnC,MAAf;AAAuB,cAAA,KAAK,EAAC,OAA7B;AAAqC,cAAA,IAAI,EAAC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJH,CAPF,eAcE,oBAAC,cAAD;AACE,cAAA,MAAM,EAAEoB,eADV;AAEE,cAAA,YAAY,EAAE,MAAMC,kBAAkB,CAAC,KAAD,CAFxC;AAGE,cAAA,QAAQ,EAAC,iBAHX;AAIE,cAAA,OAAO,EAAE,CAAC;AACRP,gBAAAA,IAAI,EAAE,WADE;AAERuB,gBAAAA,IAAI,EAAE,aAFE;AAGRC,gBAAAA,IAAI,EAAErC,KAHE;AAIRsC,gBAAAA,OAAO,EAAE,MAAM;AACbC,kBAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA7B,kBAAAA,UAAU,CAACM,YAAD,CAAV;AACD;AAPO,eAAD,EAST;AACEJ,gBAAAA,IAAI,EAAE,UADR;AAEEwB,gBAAAA,IAAI,EAAEtC,MAFR;AAGEuC,gBAAAA,OAAO,EAAE,MAAM;AACbC,kBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BvB,YAA9B;AACAK,kBAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD;AANH,eATS,EAgBN;AACDT,gBAAAA,IAAI,EAAE,SADL;AAEDwB,gBAAAA,IAAI,EAAEpC,KAFL;AAGDmC,gBAAAA,IAAI,EAAE,QAHL;AAIDE,gBAAAA,OAAO,EAAE,MAAM;AACbC,kBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;AANA,eAhBM,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eA6CE,oBAAC,QAAD;AACI,cAAA,MAAM,EAAEnB,gBADZ;AAEI,cAAA,YAAY,EAAE,MAAMC,mBAAmB,CAAC,KAAD,CAF3C;AAGI,cAAA,OAAO,EAAE,sBAHb;AAII,cAAA,MAAM,EAAE,SAJZ;AAKI,cAAA,MAAM,EAAE,CACN;AAEEmB,gBAAAA,IAAI,EAAE,MAFR;AAGEC,gBAAAA,IAAI,EAAE,MAHR;AAIEC,gBAAAA,WAAW,EAAE,wBAJf;AAKET,gBAAAA,EAAE,EAAE;AALN,eADM,CALZ;AAcI,cAAA,OAAO,EAAE,CACP;AACErB,gBAAAA,IAAI,EAAE,SADR;AAEEuB,gBAAAA,IAAI,EAAE,QAFR;AAGEQ,gBAAAA,QAAQ,EAAE,WAHZ;AAIEN,gBAAAA,OAAO,EAAE,MAAM;AACbC,kBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AANH,eADO,EASP;AACE3B,gBAAAA,IAAI,EAAE,SADR;AAEEyB,gBAAAA,OAAO,EAAE,MAAM;AACbC,kBAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAd,kBAAAA,YAAY,CAACE,KAAD,CAAZ;AACAW,kBAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6Bf,SAA7B;AACAb,kBAAAA,WAAW,CAACW,aAAD,EAAgBE,SAAhB,CAAX;AAED;AARH,eATO,CAdb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7CF,CADF;AAmFD;AAEF,SAlLM,CAAP;AAoLD,OAvLD,CAyLA;AAzLA,WA0LK,IAAIG,KAAK,KAAK,WAAd,EAA2B;AAC9B,iBACExB,SAAS,CAAC0B,GAAV,CAAeC,IAAD,IAAU;AACtB,gBAAIA,IAAI,IAAIC,SAAR,IAAqBD,IAAI,CAACE,OAAL,KAAiB,KAA1C,EAAiD;AAC/C,kCACE,oBAAE,OAAF;AAAU,gBAAA,GAAG,EAAEF,IAAI,CAACG,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACE,oBAAC,WAAD;AAAa,gBAAA,IAAI,EAAC,OAAlB;AAA0B,gBAAA,KAAK,EAAC,SAAhC;AAA0C,gBAAA,OAAO,EAAEH,IAAI,CAACE,OAAxD;AAAiE,gBAAA,WAAW,EAAGE,CAAD,IAAO;AACnF9B,kBAAAA,UAAU,CAAC0B,IAAI,CAACG,EAAN,CAAV;AACAzB,kBAAAA,iBAAiB;AAClB,iBAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,oBAAC,QAAD;AAAU,gBAAA,SAAS,EAAEsB,IAAI,CAACE,OAAL,GAAe,SAAf,GAA2B,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAqDF,IAAI,CAAClB,IAA1D,CALF,eAOE,oBAAC,SAAD;AAAW,gBAAA,OAAO,EAAE,MAAM;AACxBO,kBAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAF,kBAAAA,eAAe,CAACa,IAAI,CAACG,EAAN,CAAf;AACAV,kBAAAA,gBAAgB,CAACO,IAAI,CAACG,EAAN,CAAhB;AACD,iBAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAIG,oBAAC,OAAD;AAAS,gBAAA,IAAI,EAAEnC,MAAf;AAAuB,gBAAA,KAAK,EAAC,OAA7B;AAAqC,gBAAA,IAAI,EAAC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJH,CAPF,eAcE,oBAAC,cAAD;AACE,gBAAA,MAAM,EAAEoB,eADV;AAEE,gBAAA,YAAY,EAAE,MAAMC,kBAAkB,CAAC,KAAD,CAFxC;AAGE,gBAAA,QAAQ,EAAC,iBAHX;AAIE,gBAAA,OAAO,EAAE,CAAC;AACRP,kBAAAA,IAAI,EAAE,WADE;AAERuB,kBAAAA,IAAI,EAAE,aAFE;AAGRC,kBAAAA,IAAI,EAAErC,KAHE;AAIRsC,kBAAAA,OAAO,EAAE,MAAM;AACbC,oBAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA7B,oBAAAA,UAAU,CAACM,YAAD,CAAV;AACD;AAPO,iBAAD,EAST;AACEJ,kBAAAA,IAAI,EAAE,UADR;AAEEwB,kBAAAA,IAAI,EAAEtC,MAFR;AAGEuC,kBAAAA,OAAO,EAAE,MAAM;AACbC,oBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BvB,YAA9B;AACAK,oBAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD;AANH,iBATS,EAgBN;AACDT,kBAAAA,IAAI,EAAE,SADL;AAEDwB,kBAAAA,IAAI,EAAEpC,KAFL;AAGDmC,kBAAAA,IAAI,EAAE,QAHL;AAIDE,kBAAAA,OAAO,EAAE,MAAM;AACbC,oBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;AANA,iBAhBM,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,eA6CE,oBAAC,QAAD;AACE,gBAAA,MAAM,EAAEnB,gBADV;AAEE,gBAAA,YAAY,EAAE,MAAMC,mBAAmB,CAAC,KAAD,CAFzC;AAGE,gBAAA,OAAO,EAAE,sBAHX;AAIE,gBAAA,MAAM,EAAE,SAJV;AAKE,gBAAA,MAAM,EAAE,CACN;AAEEmB,kBAAAA,IAAI,EAAE,MAFR;AAGEC,kBAAAA,IAAI,EAAE,MAHR;AAIEC,kBAAAA,WAAW,EAAE,wBAJf;AAKET,kBAAAA,EAAE,EAAE;AALN,iBADM,CALV;AAcE,gBAAA,OAAO,EAAE,CACP;AACErB,kBAAAA,IAAI,EAAE,SADR;AAEEuB,kBAAAA,IAAI,EAAE,QAFR;AAGEQ,kBAAAA,QAAQ,EAAE,WAHZ;AAIEN,kBAAAA,OAAO,EAAE,MAAM;AACbC,oBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AANH,iBADO,EASP;AACE3B,kBAAAA,IAAI,EAAE,SADR;AAEEyB,kBAAAA,OAAO,EAAE,MAAM;AACbC,oBAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAd,oBAAAA,YAAY,CAACE,KAAD,CAAZ;AACAW,oBAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6Bf,SAA7B;AACAb,oBAAAA,WAAW,CAACW,aAAD,EAAgBE,SAAhB,CAAX;AAED;AARH,iBATO,CAdX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7CF,CADF;AAmFD;AACF,WAtFD,CADF;AAwFD;AACF;AAEF,GAjSD;;AAoSA,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,CADF,eAME,oBAAC,UAAD;AAAY,IAAA,UAAU,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,CAFF,eAQE,oBAAC,UAAD;AAAY,IAAA,WAAW,EAAEU,CAAC,IAAInB,eAAe,CAACmB,CAAC,CAACU,MAAF,CAASjB,KAAV,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,eAIE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAkB,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BrB,WAA3B,CAAlB,CADF,CAJF,CARF,eAmBE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIoB,YAAY,CAACZ,YAAD,CAFhB,CAnBF,eA0BE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,SAAjB;AAA2B,IAAA,IAAI,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAAE,MAAM;AAAET,MAAAA,cAAc;AAAI,KAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CA1BF,eAgCE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,WAAW,EAAC,2BAAtB;AAA+C,IAAA,SAAS,EAAC,MAAzD;AAAgE,IAAA,UAAU,MAA1E;AAA2E,IAAA,SAAS,MAApF;AAAqF,IAAA,QAAQ,MAA7F;AAA8F,IAAA,WAAW,EAAE6B,CAAC,IAAI;AAAErB,MAAAA,OAAO,CAACqB,CAAC,CAACU,MAAF,CAASjB,KAAV,CAAP;AAA0B,KAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,SAAjB;AAA2B,IAAA,IAAI,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAAE,MAAM;AAAEzB,MAAAA,OAAO,CAACU,IAAD,CAAP;AAAe,KAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAhCF,CANF,CADF;AAmDD,CA3WD;;AA+WA,eAAeX,IAAf","sourcesContent":["import { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonList, IonItem, IonLabel, IonInput, IonButton, IonCheckbox, IonIcon, IonSegment, IonSegmentButton, IonBadge, IonActionSheet, IonAlert } from '@ionic/react';\nimport React, { useEffect } from 'react';\nimport './Home.css';\nimport { useToDoList } from '../hooks/useToDoList';\nimport { useState } from \"react\";\nimport { create, trash, close } from 'ionicons/icons';\n//import { setConstantValue } from 'typescript';\n\nconst Home: React.FC = () => {\n\n  const { addItem, listItems, toggleItem, removeAllItems, counterTodo, setCounterTodo, removeCounterTodo, addCounterTodo, removeItem, modifieItem } = useToDoList();\n\n  // texte à ajouter pour un nouvel item\n  const [text, setText] = useState<any>();\n\n  // état du tri de la liste\n  let [segmentValue, setSegmentValue] = useState('all');\n\n  let [itemToDelete, setItemToDelete] = useState<number>();\n\n  let [showActionSheet, setShowActionSheet] = useState(false);\n\n  let [showModifieAlert, setShowModifieAlert] = useState(false);\n\n  let [itemToModifie, setItemToModifie] = useState<number>();\n\n  let [textAlert, setTextAlert] = useState('')\n\n  const displayItems = (value) => {\n\n    // afficher un message différent si la liste est vide\n    if (listItems.length === 0) {\n      return <IonItem><IonLabel>Félicitation votre liste est vide</IonLabel></IonItem>\n    }\n\n\n    else {\n\n      // afficher tous les items\n      if (value === 'all') {\n\n\n        return listItems.map((item) => {\n          if (item != undefined && item.checked === false) {\n            return (\n\n              <IonItem key={item.id}>\n                <IonCheckbox slot=\"start\" color=\"primary\" checked={item.checked} onIonChange={(e) => {\n                  toggleItem(item.id)\n                  removeCounterTodo()\n                }} />\n                <IonLabel className={item.checked ? 'checked' : ''}>{item.text}</IonLabel>\n\n                <IonButton onClick={() => {\n                  setShowActionSheet(true)\n                  setItemToDelete(item.id)\n                  setItemToModifie(item.id)\n                }}><IonIcon icon={create} color=\"light\" slot=\"end\" /></IonButton>\n\n\n                <IonActionSheet\n                  isOpen={showActionSheet}\n                  onDidDismiss={() => setShowActionSheet(false)}\n                  cssClass='my-custom-class'\n                  buttons={[{\n                    text: 'Supprimer',\n                    role: 'destructive',\n                    icon: trash,\n                    handler: () => {\n                      console.log('Supprimer');\n                      removeItem(itemToDelete);\n\n                    }\n                  },\n                  {\n                    text: 'Modifier',\n                    icon: create,\n                    handler: () => {\n                      console.log('MODIFIER !!!!!', itemToDelete);\n                      setShowModifieAlert(true)\n                    }\n                  }, {\n                    text: 'Annuler',\n                    icon: close,\n                    role: 'cancel',\n                    handler: () => {\n                      console.log('Annuler');\n                    }\n                  }]}\n                >\n                </IonActionSheet>\n\n                \n\n                <IonAlert\n                    isOpen={showModifieAlert}\n                    onDidDismiss={() => setShowModifieAlert(false)}\n                    message={'Renommez votre tâche'}\n                    header={'Prompt!'}\n                    inputs={[\n                      {\n\n                        name: 'text',\n                        type: 'text',\n                        placeholder: 'Nouveau nom de l\\'item',\n                        id: 'textToChange',\n                        handler: () => {}\n                        \n                      }]}\n                    buttons={[\n                      {\n                        text: 'Annuler',\n                        role: 'cancel',\n                        cssClass: 'secondary',\n                        handler: () => {\n                          console.log('Confirm Cancel');\n                        }\n                      },\n                      {\n                        text: 'Valider',\n                        handler: () => {\n                          console.log('Confirm Ok');\n                          setTextAlert(value)\n                          console.log('textAlert == ', textAlert);\n                          modifieItem(itemToModifie, textAlert)\n                          \n                        }\n                      }\n                    ]}\n                  />\n              </IonItem>\n            )\n          }\n\n          else if (item != undefined) {\n            return (\n              <IonItem key={item.id}>\n                <IonCheckbox slot=\"start\" color=\"primary\" checked={item.checked} onIonChange={(e) => {\n                  toggleItem(item.id)\n                  addCounterTodo()\n                }} />\n                <IonLabel className={item.checked ? 'checked' : ''}>{item.text}</IonLabel>\n\n                <IonButton onClick={() => {\n                  setShowActionSheet(true)\n                  setItemToDelete(item.id)\n                  setItemToModifie(item.id)\n                }}><IonIcon icon={create} color=\"light\" slot=\"end\" /></IonButton>\n\n\n                <IonActionSheet\n                  isOpen={showActionSheet}\n                  onDidDismiss={() => setShowActionSheet(false)}\n                  cssClass='my-custom-class'\n                  buttons={[{\n                    text: 'Supprimer',\n                    role: 'destructive',\n                    icon: trash,\n                    handler: () => {\n                      console.log('Supprimer');\n                      removeItem(itemToDelete)\n                    }\n                  },\n                  {\n                    text: 'Modifier',\n                    icon: create,\n                    handler: () => {\n                      console.log('MODIFIER !!!!!', itemToDelete);\n                      setShowModifieAlert(true)\n                    }\n                  }, {\n                    text: 'Annuler',\n                    icon: close,\n                    role: 'cancel',\n                    handler: () => {\n                      console.log('Annuler');\n                    }\n                  }]}\n                >\n                </IonActionSheet>\n\n                <IonAlert\n                    isOpen={showModifieAlert}\n                    onDidDismiss={() => setShowModifieAlert(false)}\n                    message={'Renommez votre tâche'}\n                    header={'Prompt!'}\n                    inputs={[\n                      {\n\n                        name: 'text',\n                        type: 'text',\n                        placeholder: 'Nouveau nom de l\\'item',\n                        id: 'textToChange'\n                        \n                      }]}\n                    buttons={[\n                      {\n                        text: 'Annuler',\n                        role: 'cancel',\n                        cssClass: 'secondary',\n                        handler: () => {\n                          console.log('Confirm Cancel');\n                        }\n                      },\n                      {\n                        text: 'Valider',\n                        handler: () => {\n                          console.log('Confirm Ok');\n                          setTextAlert(value)\n                          console.log('textAlert == ', textAlert);\n                          modifieItem(itemToModifie, textAlert)\n                          \n                        }\n                      }\n                    ]}\n                  />\n              </IonItem>\n            )\n          }\n\n        }\n        )\n      }\n\n      // afficher les items non-checké\n      else if (value === 'unchecked') {\n        return (\n          listItems.map((item) => {\n            if (item != undefined && item.checked === false) {\n              return (\n                < IonItem key={item.id} >\n                  <IonCheckbox slot=\"start\" color=\"primary\" checked={item.checked} onIonChange={(e) => {\n                    toggleItem(item.id)\n                    removeCounterTodo()\n                  }} />\n                  <IonLabel className={item.checked ? 'checked' : ''}>{item.text}</IonLabel>\n\n                  <IonButton onClick={() => {\n                    setShowActionSheet(true)\n                    setItemToDelete(item.id)\n                    setItemToModifie(item.id)\n                  }}><IonIcon icon={create} color=\"light\" slot=\"end\" /></IonButton>\n\n\n                  <IonActionSheet\n                    isOpen={showActionSheet}\n                    onDidDismiss={() => setShowActionSheet(false)}\n                    cssClass='my-custom-class'\n                    buttons={[{\n                      text: 'Supprimer',\n                      role: 'destructive',\n                      icon: trash,\n                      handler: () => {\n                        console.log('Supprimer');\n                        removeItem(itemToDelete)\n                      }\n                    },\n                    {\n                      text: 'Modifier',\n                      icon: create,\n                      handler: () => {\n                        console.log('MODIFIER !!!!!', itemToDelete);\n                        setShowModifieAlert(true)\n                      }\n                    }, {\n                      text: 'Annuler',\n                      icon: close,\n                      role: 'cancel',\n                      handler: () => {\n                        console.log('Annuler');\n                      }\n                    }]}\n                  >\n                  </IonActionSheet>\n\n                  <IonAlert\n                    isOpen={showModifieAlert}\n                    onDidDismiss={() => setShowModifieAlert(false)}\n                    message={'Renommez votre tâche'}\n                    header={'Prompt!'}\n                    inputs={[\n                      {\n\n                        name: 'text',\n                        type: 'text',\n                        placeholder: 'Nouveau nom de l\\'item',\n                        id: 'textToChange'\n                        \n                      }]}\n                    buttons={[\n                      {\n                        text: 'Annuler',\n                        role: 'cancel',\n                        cssClass: 'secondary',\n                        handler: () => {\n                          console.log('Confirm Cancel');\n                        }\n                      },\n                      {\n                        text: 'Valider',\n                        handler: () => {\n                          console.log('Confirm Ok');\n                          setTextAlert(value)\n                          console.log('textAlert == ', textAlert);\n                          modifieItem(itemToModifie, textAlert)\n                          \n                        }\n                      }\n                    ]}\n                  />\n                </IonItem >\n              )\n            }\n          }))\n      }\n    }\n\n  }\n\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>To do list</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">To do list</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n        <IonSegment onIonChange={e => setSegmentValue(e.detail.value)}>\n          <IonSegmentButton value=\"all\">\n            <IonLabel>Tout</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value=\"unchecked\">\n            <IonLabel>À faire <IonBadge color=\"primary\">{counterTodo}</IonBadge></IonLabel>\n\n          </IonSegmentButton>\n        </IonSegment>\n\n\n        <IonList>\n          {\n            displayItems(segmentValue)\n          }\n        </IonList>\n\n\n        <IonItem>\n          <IonButton color=\"primary\" type=\"submit\" onClick={() => { removeAllItems() }}>Vider totalement la liste</IonButton>\n        </IonItem>\n\n\n\n        <IonItem>\n          <IonInput placeholder=\"Qu'avez-vous en tête ?\" inputmode=\"text\" clearInput autofocus required onIonChange={e => { setText(e.detail.value); }}></IonInput>\n          <IonButton color=\"primary\" type=\"submit\" onClick={() => { addItem(text) }}>Créer</IonButton>\n        </IonItem>\n\n\n\n      </IonContent>\n\n\n    </IonPage>\n  );\n};\n\n\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}