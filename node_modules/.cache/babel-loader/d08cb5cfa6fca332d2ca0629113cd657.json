{"ast":null,"code":"var _jsxFileName = \"/Users/justinluczak/Documents/COURS CNAM 2EME ANNEE/webmobile/github/luczak-justin_todo-list/src/pages/Home.tsx\";\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonList, IonItem, IonLabel, IonInput, IonButton, IonCheckbox, IonIcon, IonSegment, IonSegmentButton } from '@ionic/react';\nimport React from 'react';\nimport './Home.css';\nimport { useToDoList } from '../hooks/useToDoList';\nimport { useState } from \"react\";\nimport { create } from 'ionicons/icons'; //import { setConstantValue } from 'typescript';\n\nconst Home = () => {\n  const {\n    addItem,\n    listItems,\n    toggleItem,\n    removeAllItems\n  } = useToDoList();\n  const [text, setText] = useState();\n  let segmentValue = 'all';\n\n  const displayItems = value => {\n    if (listItems.length === 0) {\n      return /*#__PURE__*/React.createElement(IonItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(IonLabel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 23\n        }\n      }, \"F\\xE9licitation votre liste est vide\"));\n    } else {\n      // afficher tous les items\n      if (value === 'all') {\n        return listItems.map(item => /*#__PURE__*/React.createElement(IonItem, {\n          key: item.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(IonCheckbox, {\n          slot: \"start\",\n          color: \"primary\",\n          checked: item.checked,\n          onIonChange: e => {\n            toggleItem(item.id);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(IonLabel, {\n          className: item.checked ? 'checked' : '',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }\n        }, item.text), /*#__PURE__*/React.createElement(IonIcon, {\n          icon: create,\n          color: \"primary\",\n          slot: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }\n        })));\n      } // afficher les items non-checkÃ©\n      else if (value === 'unchecked') {\n          lit;\n        }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"To do list\"))), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    collapse: \"condense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"To do list\"))), /*#__PURE__*/React.createElement(IonSegment, {\n    onIonChange: e => console.log('Segment selected', e.detail.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Tout\")), /*#__PURE__*/React.createElement(IonSegmentButton, {\n    value: \"unchecked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"\\xC0 faire\"))), /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, displayItems(segmentValue)), /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"primary\",\n    type: \"submit\",\n    onClick: () => {\n      removeAllItems();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Vider totalement la liste\")), /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    placeholder: \"Qu'avez-vous en t\\xEAte ?\",\n    clearInput: true,\n    autofocus: true,\n    required: true,\n    onIonChange: e => {\n      setText(e.detail.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(IonButton, {\n    color: \"primary\",\n    type: \"submit\",\n    onClick: () => {\n      addItem(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Cr\\xE9er\"))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/justinluczak/Documents/COURS CNAM 2EME ANNEE/webmobile/github/luczak-justin_todo-list/src/pages/Home.tsx"],"names":["IonContent","IonHeader","IonPage","IonTitle","IonToolbar","IonList","IonItem","IonLabel","IonInput","IonButton","IonCheckbox","IonIcon","IonSegment","IonSegmentButton","React","useToDoList","useState","create","Home","addItem","listItems","toggleItem","removeAllItems","text","setText","segmentValue","displayItems","value","length","map","item","id","checked","e","lit","console","log","detail"],"mappings":"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","sourcesContent":["import { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonList, IonItem, IonLabel, IonInput, IonButton, IonCheckbox, IonIcon, IonSegment, IonSegmentButton } from '@ionic/react';\nimport React from 'react';\nimport './Home.css';\nimport { useToDoList } from '../hooks/useToDoList';\nimport { useState } from \"react\";\nimport { create } from 'ionicons/icons';\n//import { setConstantValue } from 'typescript';\n\nconst Home: React.FC = () => {\n\n  const { addItem, listItems, toggleItem, removeAllItems } = useToDoList();\n  const [text, setText] = useState<any>();\n\n  let segmentValue = 'all'\n\n\n  const displayItems = (value) => {\n\n    if (listItems.length === 0) {\n      return <IonItem><IonLabel>FÃ©licitation votre liste est vide</IonLabel></IonItem>\n    }\n\n\n    else {\n\n      // afficher tous les items\n      if (value === 'all') {\n\n\n        return listItems.map((item) => (\n\n          <IonItem key={item.id}>\n            <IonCheckbox slot=\"start\" color=\"primary\" checked={item.checked} onIonChange={(e) => { toggleItem(item.id) }} />\n            <IonLabel className={item.checked ? 'checked' : ''}>{item.text}</IonLabel>\n\n            <IonIcon icon={create} color=\"primary\" slot=\"end\" />\n          </IonItem>\n        ))\n      }\n\n      // afficher les items non-checkÃ©\n      else if (value === 'unchecked') {\n        lit\n      }\n\n    }\n\n\n  }\n\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>To do list</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">To do list</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n        <IonSegment onIonChange={e => console.log('Segment selected', e.detail.value)}>\n          <IonSegmentButton value=\"all\">\n            <IonLabel>Tout</IonLabel>\n          </IonSegmentButton>\n          <IonSegmentButton value=\"unchecked\">\n            <IonLabel>Ã faire</IonLabel>\n          </IonSegmentButton>\n        </IonSegment>\n\n\n        <IonList>\n          {\n            displayItems(segmentValue)\n          }\n        </IonList>\n\n\n        <IonItem>\n          <IonButton color=\"primary\" type=\"submit\" onClick={() => { removeAllItems() }}>Vider totalement la liste</IonButton>\n        </IonItem>\n\n\n\n        <IonItem>\n          <IonInput placeholder=\"Qu'avez-vous en tÃªte ?\" clearInput autofocus required onIonChange={e => { setText(e.detail.value); }}></IonInput>\n          <IonButton color=\"primary\" type=\"submit\" onClick={() => { addItem(text) }}>CrÃ©er</IonButton>\n        </IonItem>\n\n\n\n      </IonContent>\n\n\n    </IonPage>\n  );\n};\n\n\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}