{"ast":null,"code":"import { useStorage } from '@capacitor-community/react-hooks/storage';\nimport { useState } from 'react';\nlet counter = 0;\nexport function useToDoList() {\n  const {\n    get,\n    set,\n    remove\n  } = useStorage(); //Pour initialiser la liste stockées en local et la stocker sur la liste temporaire\n\n  const initializeItems2d = () => {\n    get('').then(valueInitial2d => {\n      if (valueInitial2d != null) {\n        tableLocal = JSON.parse(valueInitial2d);\n      } else {\n        tableLocal = ['vide'];\n      }\n    });\n  };\n\n  let [listItems, updateList] = useState([]);\n\n  function addItem(text) {\n    const newItem = {\n      id: counter++,\n      text: text,\n      checked: false\n    };\n    const newTable = listItems.concat([newItem]);\n    updateList(newTable);\n  }\n\n  function toggleItem(id) {\n    const updatedList = listItems.map(item => {\n      if (item.id === id) {\n        item.checked = !item.checked;\n      }\n\n      return item;\n    });\n    updateList(updatedList);\n  }\n\n  return {\n    listItems,\n    addItem,\n    toggleItem\n  };\n}","map":{"version":3,"sources":["/Users/justinluczak/Documents/COURS CNAM 2EME ANNEE/webmobile/github/luczak-justin_todo-list/src/hooks/useToDoList.ts"],"names":["useStorage","useState","counter","useToDoList","get","set","remove","initializeItems2d","then","valueInitial2d","tableLocal","JSON","parse","listItems","updateList","addItem","text","newItem","id","checked","newTable","concat","toggleItem","updatedList","map","item"],"mappings":"AAAA,SAASA,UAAT,QAA2B,0CAA3B;AAEA,SAASC,QAAT,QAAyB,OAAzB;AAEA,IAAIC,OAAO,GAAG,CAAd;AAEA,OAAO,SAASC,WAAT,GAAuB;AAG1B,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,GAAP;AAAYC,IAAAA;AAAZ,MAAuBN,UAAU,EAAvC,CAH0B,CAK1B;;AACA,QAAMO,iBAAiB,GAAG,MAAM;AAC5BH,IAAAA,GAAG,CAAC,EAAD,CAAH,CAAQI,IAAR,CAAcC,cAAD,IAAoB;AAC7B,UAAIA,cAAc,IAAI,IAAtB,EAA4B;AACxBC,QAAAA,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWH,cAAX,CAAb;AACH,OAFD,MAEO;AACHC,QAAAA,UAAU,GAAG,CAAC,MAAD,CAAb;AACH;AACJ,KAND;AAOH,GARD;;AAYA,MAAI,CAACG,SAAD,EAAYC,UAAZ,IAA0Bb,QAAQ,CAAC,EAAD,CAAtC;;AAEA,WAASc,OAAT,CAAiBC,IAAjB,EAAuB;AACnB,UAAMC,OAAO,GAAG;AACZC,MAAAA,EAAE,EAAEhB,OAAO,EADC;AAEZc,MAAAA,IAAI,EAAEA,IAFM;AAGZG,MAAAA,OAAO,EAAE;AAHG,KAAhB;AAMA,UAAMC,QAAQ,GAAGP,SAAS,CAACQ,MAAV,CAAiB,CAACJ,OAAD,CAAjB,CAAjB;AAEAH,IAAAA,UAAU,CAACM,QAAD,CAAV;AACH;;AAED,WAASE,UAAT,CAAoBJ,EAApB,EAAwB;AACpB,UAAMK,WAAW,GAAGV,SAAS,CAACW,GAAV,CAAcC,IAAI,IAAI;AACtC,UAAIA,IAAI,CAACP,EAAL,KAAYA,EAAhB,EAAoB;AAChBO,QAAAA,IAAI,CAACN,OAAL,GAAe,CAACM,IAAI,CAACN,OAArB;AACH;;AACD,aAAOM,IAAP;AACH,KALmB,CAApB;AAOAX,IAAAA,UAAU,CAACS,WAAD,CAAV;AACH;;AAGD,SAAO;AACHV,IAAAA,SADG;AACQE,IAAAA,OADR;AACiBO,IAAAA;AADjB,GAAP;AAIH","sourcesContent":["import { useStorage } from '@capacitor-community/react-hooks/storage';\nimport { verify } from 'crypto';\nimport { useState } from 'react';\n\nlet counter = 0\n\nexport function useToDoList() {\n\n\n    const { get, set, remove } = useStorage();\n\n    //Pour initialiser la liste stockées en local et la stocker sur la liste temporaire\n    const initializeItems2d = () => {\n        get('').then((valueInitial2d) => {\n            if (valueInitial2d != null) {\n                tableLocal = JSON.parse(valueInitial2d)\n            } else {\n                tableLocal = ['vide']\n            }\n        })\n    }\n\n\n    \n    let [listItems, updateList] = useState([]);\n\n    function addItem(text) {\n        const newItem = {\n            id: counter++,\n            text: text,\n            checked: false\n        }\n\n        const newTable = listItems.concat([newItem])\n\n        updateList(newTable)\n    }\n\n    function toggleItem(id) {\n        const updatedList = listItems.map(item => {\n            if (item.id === id) {\n                item.checked = !item.checked\n            }\n            return item\n        })\n\n        updateList(updatedList)\n    }\n\n\n    return {\n        listItems, addItem, toggleItem\n    }\n\n}"]},"metadata":{},"sourceType":"module"}