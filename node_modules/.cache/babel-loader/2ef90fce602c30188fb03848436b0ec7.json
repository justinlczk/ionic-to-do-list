{"ast":null,"code":"import { useState } from 'react';\nlet counter = 0;\nexport function useToDoList() {\n  let [listItems, updateList] = useState([]);\n\n  function addItem(text) {\n    const newItem = {\n      id: counter++,\n      text: text,\n      checked: false\n    };\n    const newTable = listItems.concat([newItem]);\n    updateList(newTable);\n  }\n\n  function toggleItem(id) {\n    const updatedList = listItems.map(item => {\n      if (item.id === id) {\n        item.checked = !item.checked;\n      }\n\n      return item;\n    });\n    updateList(updatedList);\n  }\n\n  return {\n    listItems,\n    addItem,\n    toggleItem\n  };\n}","map":{"version":3,"sources":["/Users/justinluczak/Documents/COURS CNAM 2EME ANNEE/webmobile/github/luczak-justin_todo-list/src/hooks/useToDoList.ts"],"names":["useState","counter","useToDoList","listItems","updateList","addItem","text","newItem","id","checked","newTable","concat","toggleItem","updatedList","map","item"],"mappings":"AAEA,SAASA,QAAT,QAAyB,OAAzB;AAIA,IAAIC,OAAO,GAAG,CAAd;AAEA,OAAO,SAASC,WAAT,GAAuB;AAE1B,MAAI,CAACC,SAAD,EAAYC,UAAZ,IAA0BJ,QAAQ,CAAC,EAAD,CAAtC;;AAEA,WAASK,OAAT,CAAiBC,IAAjB,EAAuB;AACnB,UAAMC,OAAO,GAAG;AACZC,MAAAA,EAAE,EAAEP,OAAO,EADC;AAEZK,MAAAA,IAAI,EAAEA,IAFM;AAGZG,MAAAA,OAAO,EAAE;AAHG,KAAhB;AAMA,UAAMC,QAAQ,GAAGP,SAAS,CAACQ,MAAV,CAAiB,CAACJ,OAAD,CAAjB,CAAjB;AAEAH,IAAAA,UAAU,CAACM,QAAD,CAAV;AACH;;AAED,WAASE,UAAT,CAAoBJ,EAApB,EAAwB;AACpB,UAAMK,WAAW,GAAGV,SAAS,CAACW,GAAV,CAAcC,IAAI,IAAI;AACtC,UAAIA,IAAI,CAACP,EAAL,KAAYA,EAAhB,EAAoB;AAChBO,QAAAA,IAAI,CAACN,OAAL,GAAe,CAACM,IAAI,CAACN,OAArB;AACH;;AACD,aAAOM,IAAP;AACH,KALmB,CAApB;AAOAX,IAAAA,UAAU,CAACS,WAAD,CAAV;AACH;;AAGD,SAAO;AACHV,IAAAA,SADG;AACQE,IAAAA,OADR;AACiBO,IAAAA;AADjB,GAAP;AAIH","sourcesContent":["import { useStorage } from '@capacitor-community/react-hooks/storage';\nimport { verify } from 'crypto';\nimport { useState } from 'react';\n\n\n\nlet counter = 0\n\nexport function useToDoList() {\n\n    let [listItems, updateList] = useState([]);\n\n    function addItem(text) {\n        const newItem = {\n            id: counter++,\n            text: text,\n            checked: false\n        }\n\n        const newTable = listItems.concat([newItem])\n\n        updateList(newTable)\n    }\n\n    function toggleItem(id) {\n        const updatedList = listItems.map(item => {\n            if (item.id === id) {\n                item.checked = !item.checked\n            }\n            return item\n        })\n\n        updateList(updatedList)\n    }\n\n\n    return {\n        listItems, addItem, toggleItem\n    }\n\n}"]},"metadata":{},"sourceType":"module"}