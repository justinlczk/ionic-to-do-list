{"ast":null,"code":"import { useState } from 'react';\nlet counter = 0;\nexport function useToDoList() {\n  let item = {\n    id: 1,\n    text: 'un exemple',\n    checked: false\n  };\n  let [listItems, updateList] = useState([item]);\n\n  function addItem(text) {\n    const newItem = {\n      id: counter++,\n      text: text,\n      checked: false\n    };\n    const newTable = listItems.concat([newItem]);\n    updateList(newTable);\n  }\n\n  function toggleItem(id) {\n    const updatedList = listItems.map(item => {\n      if (item.id === id) {\n        item.checked = !item.checked;\n      }\n\n      return item;\n    });\n    u;\n  }\n\n  return {\n    listItems,\n    addItem,\n    toggleItem\n  };\n}","map":{"version":3,"sources":["/Users/justinluczak/Documents/COURS CNAM 2EME ANNEE/webmobile/github/luczak-justin_todo-list/src/hooks/useToDoList.ts"],"names":["useState","counter","useToDoList","item","id","text","checked","listItems","updateList","addItem","newItem","newTable","concat","toggleItem","updatedList","map","u"],"mappings":"AAEA,SAASA,QAAT,QAAyB,OAAzB;AAEA,IAAIC,OAAO,GAAG,CAAd;AAEA,OAAO,SAASC,WAAT,GAAuB;AAE1B,MAAIC,IAAI,GAAG;AACPC,IAAAA,EAAE,EAAE,CADG;AAEPC,IAAAA,IAAI,EAAE,YAFC;AAGPC,IAAAA,OAAO,EAAE;AAHF,GAAX;AAOA,MAAI,CAACC,SAAD,EAAYC,UAAZ,IAA0BR,QAAQ,CAAC,CAACG,IAAD,CAAD,CAAtC;;AAEA,WAASM,OAAT,CAAiBJ,IAAjB,EAAuB;AACnB,UAAMK,OAAO,GAAG;AACZN,MAAAA,EAAE,EAAEH,OAAO,EADC;AAEZI,MAAAA,IAAI,EAAEA,IAFM;AAGZC,MAAAA,OAAO,EAAE;AAHG,KAAhB;AAMA,UAAMK,QAAQ,GAAGJ,SAAS,CAACK,MAAV,CAAiB,CAACF,OAAD,CAAjB,CAAjB;AAEAF,IAAAA,UAAU,CAACG,QAAD,CAAV;AACH;;AAED,WAASE,UAAT,CAAoBT,EAApB,EAAwB;AACpB,UAAMU,WAAW,GAAGP,SAAS,CAACQ,GAAV,CAAcZ,IAAI,IAAI;AACtC,UAAIA,IAAI,CAACC,EAAL,KAAYA,EAAhB,EAAoB;AAChBD,QAAAA,IAAI,CAACG,OAAL,GAAe,CAACH,IAAI,CAACG,OAArB;AACH;;AACD,aAAOH,IAAP;AACH,KALmB,CAApB;AAOAa,IAAAA,CAAC;AACJ;;AAGD,SAAO;AACHT,IAAAA,SADG;AACQE,IAAAA,OADR;AACiBI,IAAAA;AADjB,GAAP;AAIH","sourcesContent":["import { useStorage } from '@capacitor-community/react-hooks/storage';\nimport { verify } from 'crypto';\nimport { useState } from 'react';\n\nlet counter = 0\n\nexport function useToDoList() {\n\n    let item = {\n        id: 1,\n        text: 'un exemple',\n        checked: false\n    }\n\n\n    let [listItems, updateList] = useState([item]);\n\n    function addItem(text) {\n        const newItem = {\n            id: counter++,\n            text: text,\n            checked: false\n        }\n\n        const newTable = listItems.concat([newItem])\n\n        updateList(newTable)\n    }\n\n    function toggleItem(id) {\n        const updatedList = listItems.map(item => {\n            if (item.id === id) {\n                item.checked = !item.checked\n            }\n            return item\n        })\n\n        u\n    }\n\n\n    return {\n        listItems, addItem, toggleItem\n    }\n\n}"]},"metadata":{},"sourceType":"module"}