{"ast":null,"code":"import { useEffect } from \"react\";\n//import { IonInput } from '@ionic/react';\nimport { useStorage } from '@capacitor-community/react-hooks/storage'; //const { Storage } = Plugins;\n\nconst TODO_STORAGE = \"todos\";\nconst tableauToDo = [];\nexport function useToDoList() {\n  const createItem = itemValue => {\n    console.log('Le texte envoyé :', itemValue);\n    tableauToDo.push(itemValue);\n    console.log(tableauToDo); //Ne prends que la dernière entrée en compte\n    // tableauToDo.map((value, index) => Storage.set({\n    //     key: 'todos',\n    //     value: JSON.stringify({\n    //         id: index,\n    //         name: value\n    //     })\n    // }))\n    // const ret = Storage.get({ key: 'todos' })\n    // console.log(Storage.get({ key: 'todos' }))\n    // //Prends en compte plusieurs entrées mais écrase toujours les données précédentes\n    // Storage.set({\n    //     key: 'todosSet',\n    //     value: JSON.stringify(tableauToDo)\n    // });\n    // console.log('todo SetObject', Storage.get({ key: 'todosSet' }))\n    // const valueToGet = Storage.get({ key: 'todosSet' })\n  };\n\n  const {\n    get,\n    set,\n    remove,\n    getKeys,\n    clear\n  } = useStorage();\n  useEffect(() => {\n    async function example() {\n      const value = await get('name');\n      await set('name', 'Max');\n      await remove('name');\n      const allKeys = await getKeys();\n      await clear();\n    }\n  }, [get, set, remove, keys, clear]);\n  return {\n    createItem,\n    tableauToDo\n  };\n}","map":{"version":3,"sources":["/Users/justinluczak/Documents/COURS CNAM 2EME ANNEE/webmobile/Exercice todolist/todolist/src/hooks/useToDoList.ts"],"names":["useEffect","useStorage","TODO_STORAGE","tableauToDo","useToDoList","createItem","itemValue","console","log","push","get","set","remove","getKeys","clear","example","value","allKeys","keys"],"mappings":"AAAA,SAAmBA,SAAnB,QAAoC,OAApC;AAGA;AACA,SAASC,UAAT,QAA8D,0CAA9D,C,CAEA;;AAIA,MAAMC,YAAY,GAAG,OAArB;AACA,MAAMC,WAAqB,GAAG,EAA9B;AAGA,OAAO,SAASC,WAAT,GAAuB;AAE1B,QAAMC,UAAU,GAAIC,SAAD,IAAuB;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,SAAjC;AACAH,IAAAA,WAAW,CAACM,IAAZ,CAAiBH,SAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ,EAHsC,CAKtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEH,GA9BD;;AAgCA,QAAM;AAAEO,IAAAA,GAAF;AAAOC,IAAAA,GAAP;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA;AAA7B,MAAuCb,UAAU,EAAvD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAee,OAAf,GAAyB;AACvB,YAAMC,KAAK,GAAG,MAAMN,GAAG,CAAC,MAAD,CAAvB;AACA,YAAMC,GAAG,CAAC,MAAD,EAAS,KAAT,CAAT;AACA,YAAMC,MAAM,CAAC,MAAD,CAAZ;AACA,YAAMK,OAAO,GAAG,MAAMJ,OAAO,EAA7B;AACA,YAAMC,KAAK,EAAX;AACD;AACF,GARQ,EAQN,CAAEJ,GAAF,EAAOC,GAAP,EAAYC,MAAZ,EAAoBM,IAApB,EAA0BJ,KAA1B,CARM,CAAT;AAcA,SAAO;AACHT,IAAAA,UADG;AACSF,IAAAA;AADT,GAAP;AAIH","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { isPlatform } from '@ionic/react';\nimport { Plugins } from '@capacitor/core';\n//import { IonInput } from '@ionic/react';\nimport { useStorage, useStorageItem, availableFeatures } from '@capacitor-community/react-hooks/storage';\n\n//const { Storage } = Plugins;\n\n\n\nconst TODO_STORAGE = \"todos\";\nconst tableauToDo: string[] = [];\n\n\nexport function useToDoList() {\n\n    const createItem = (itemValue: string) => {\n        console.log('Le texte envoyé :', itemValue)\n        tableauToDo.push(itemValue)\n        console.log(tableauToDo)\n\n        //Ne prends que la dernière entrée en compte\n        // tableauToDo.map((value, index) => Storage.set({\n        //     key: 'todos',\n        //     value: JSON.stringify({\n        //         id: index,\n        //         name: value\n        //     })\n        // }))\n\n        // const ret = Storage.get({ key: 'todos' })\n\n        // console.log(Storage.get({ key: 'todos' }))\n\n\n        // //Prends en compte plusieurs entrées mais écrase toujours les données précédentes\n        // Storage.set({\n        //     key: 'todosSet',\n        //     value: JSON.stringify(tableauToDo)\n        // });\n\n        // console.log('todo SetObject', Storage.get({ key: 'todosSet' }))\n\n\n        // const valueToGet = Storage.get({ key: 'todosSet' })\n\n    }\n\n    const { get, set, remove, getKeys, clear } = useStorage();\n    useEffect(() => {\n      async function example() {\n        const value = await get('name');\n        await set('name', 'Max');\n        await remove('name');\n        const allKeys = await getKeys();\n        await clear();\n      }\n    }, [ get, set, remove, keys, clear ]);\n\n    \n\n\n\n    return {\n        createItem, tableauToDo\n    }\n\n}\n\n\nexport interface ToDoList {\n    filepath: string;\n    webviewPath?: string;\n}"]},"metadata":{},"sourceType":"module"}