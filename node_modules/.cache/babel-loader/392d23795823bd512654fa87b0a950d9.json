{"ast":null,"code":"var _jsxFileName = \"/Users/justinluczak/Documents/COURS CNAM 2EME ANNEE/webmobile/Exercice todolist/todolist/src/pages/Home.tsx\";\nimport { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonList, IonItem, IonLabel, IonInput, IonButton, IonCheckbox, IonIcon } from '@ionic/react';\nimport React from 'react'; //import ExploreContainer from '../components/ExploreContainer';\n\nimport './Home.css';\nimport { useToDoList } from '../hooks/useToDoList';\nimport { useState } from \"react\";\nimport { create } from 'ionicons/icons';\nimport { forceUpdate } from 'ionicons/dist/types/stencil-public-runtime';\n\nconst Home = () => {\n  const {\n    tableauToDo,\n    addItem,\n    initializeItems,\n    removeAllItems,\n    tableauNew,\n    initializeItems2d,\n    changeState\n  } = useToDoList();\n  const [text, setText] = useState();\n  initializeItems();\n  initializeItems2d(); //const [isChecked, setChecked] = useState(false);\n  //Probleme : applique la classe a tous les items  \n  //const testCheck = isChecked === true ? console.log('cette syntaxte marche', 'c\\'est true') : console.log('c\\'est false')\n\n  const handleCheckboxChange = variable => {//console.log(variable);\n  };\n\n  tableauNew.map((value, index) => console.log(index, value));\n  tableauNew.map((value, index) => console.log(value[0])); //const testState = (valeur: string) => valeur === 'active' ? 'unlined' : 'lined';\n  //const testCheck = (valeur2: string) => valeur2 === 'active' ? false : true\n\n  const testState = valeur => {\n    if (valeur == 'active') {\n      return 'unlined';\n    } else if (valeur == 'done') {\n      return 'lined';\n    }\n  };\n\n  const isChecked = valeurC => {\n    if (valeurC == 'active') {\n      return false;\n    } else if (valeurC == 'done') {\n      return true;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"To do list\"))), /*#__PURE__*/React.createElement(IonContent, {\n    fullscreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    collapse: \"condense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"To do list\"))), /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, tableauNew.map((value, index) => /*#__PURE__*/React.createElement(IonItem, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonCheckbox, {\n    slot: \"start\",\n    color: \"primary\",\n    checked: isChecked(value[1]),\n    onIonChange: e => {\n      changeState({\n        index\n      });\n      forceUpdate(callBa);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(IonLabel, {\n    className: testState(value[1]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, value[0]), /*#__PURE__*/React.createElement(IonIcon, {\n    icon: create,\n    color: \"primary\",\n    slot: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    color: \"primary\",\n    type: \"submit\",\n    onClick: () => removeAllItems(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Vider totalement la liste\")), /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    placeholder: \"Qu'avez-vous en t\\xEAte ?\",\n    clearInput: true,\n    autofocus: true,\n    required: true,\n    onIonChange: e => {\n      setText(e.detail.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(IonButton, {\n    color: \"primary\",\n    type: \"submit\",\n    onClick: () => {\n      addItem(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Cr\\xE9er\"))));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/justinluczak/Documents/COURS CNAM 2EME ANNEE/webmobile/Exercice todolist/todolist/src/pages/Home.tsx"],"names":["IonContent","IonHeader","IonPage","IonTitle","IonToolbar","IonList","IonItem","IonLabel","IonInput","IonButton","IonCheckbox","IonIcon","React","useToDoList","useState","create","forceUpdate","Home","tableauToDo","addItem","initializeItems","removeAllItems","tableauNew","initializeItems2d","changeState","text","setText","handleCheckboxChange","variable","map","value","index","console","log","testState","valeur","isChecked","valeurC","e","callBa","detail"],"mappings":"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","sourcesContent":["import { IonContent, IonHeader, IonPage, IonTitle, IonToolbar, IonList, IonItem, IonLabel, IonInput, IonButton, IonToggle, IonRadio, IonCheckbox, IonItemSliding, IonItemOption, IonItemOptions, IonIcon } from '@ionic/react';\nimport React from 'react';\n//import ExploreContainer from '../components/ExploreContainer';\nimport './Home.css';\nimport { useToDoList } from '../hooks/useToDoList';\nimport { useState, SetStateAction } from \"react\";\nimport { create } from 'ionicons/icons';\nimport { getClassName } from '@ionic/react/dist/types/components/utils';\nimport { forceUpdate } from 'ionicons/dist/types/stencil-public-runtime';\n\nconst Home: React.FC = () => {\n\n  const { tableauToDo, addItem, initializeItems, removeAllItems, tableauNew, initializeItems2d, changeState } = useToDoList();\n  const [text, setText] = useState<any>();\n  initializeItems();\n  initializeItems2d();\n\n\n  //const [isChecked, setChecked] = useState(false);\n\n\n  //Probleme : applique la classe a tous les items  \n\n  //const testCheck = isChecked === true ? console.log('cette syntaxte marche', 'c\\'est true') : console.log('c\\'est false')\n\n  const handleCheckboxChange = (variable: number) => {\n    //console.log(variable);\n  }\n\n  tableauNew.map((value, index) =>  (console.log(index, value)))\n\n  tableauNew.map((value, index) =>  (\n    console.log(value[0])\n  ))\n\n  //const testState = (valeur: string) => valeur === 'active' ? 'unlined' : 'lined';\n  //const testCheck = (valeur2: string) => valeur2 === 'active' ? false : true\n\n  const testState = (valeur: string) => {\n      if (valeur == 'active') {return 'unlined'} \n      else if (valeur == 'done'){return 'lined'}\n  }\n\n  const isChecked = (valeurC: string) => {\n    if (valeurC == 'active') {return false} \n    else if (valeurC == 'done'){return true}\n}\n\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>To do list</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent fullscreen>\n        <IonHeader collapse=\"condense\">\n          <IonToolbar>\n            <IonTitle size=\"large\">To do list</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n\n\n        <IonList>\n          {\n            tableauNew.map((value, index) => (\n              <IonItem key={index}>\n                <IonCheckbox slot=\"start\" color=\"primary\" checked={isChecked(value[1])} onIonChange={e => { changeState({index}) \n              forceUpdate(callBa)\n              } } />\n                <IonLabel className={ testState(value[1]) }>{value[0]}</IonLabel>\n                <IonIcon icon={create} color=\"primary\" slot=\"end\" />\n              </IonItem>\n            ))\n          }\n        </IonList>\n\n\n        <IonItem>\n          <IonButton color=\"primary\" type=\"submit\" onClick={() => removeAllItems() }>Vider totalement la liste</IonButton>\n        </IonItem>\n\n        <IonItem>\n          <IonInput placeholder=\"Qu'avez-vous en tête ?\" clearInput autofocus required onIonChange={e => { setText(e.detail.value!); }}></IonInput>\n          <IonButton color=\"primary\" type=\"submit\" onClick={() => { addItem(text) \n          \n          }}>Créer</IonButton>\n        </IonItem>\n\n      </IonContent>\n    </IonPage>\n  );\n};\n\n\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}