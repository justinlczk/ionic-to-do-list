{"ast":null,"code":"//import { IonInput } from '@ionic/react';\nconst TODO_STORAGE = \"todos\";\nconst tableauToDo = [];\nexport function useToDoList() {\n  const createItem = itemValue => {\n    console.log('Le texte envoyé :', itemValue);\n    tableauToDo.push(itemValue);\n    console.log(tableauToDo); //Ne prends que la dernière entrée en compte\n\n    tableauToDo.map((value, index) => Storage.set({\n      key: 'todos',\n      value: JSON.stringify({\n        id: index,\n        name: value\n      })\n    }));\n    const ret = Storage.get({\n      key: 'todos'\n    });\n    console.log(Storage.get({\n      key: 'todos'\n    })); //Prends en compte plusieurs entrées mais écrase toujours les données précédentes\n\n    Storage.set({\n      key: 'todosSet',\n      value: JSON.stringify(tableauToDo)\n    });\n    console.log('todo SetObject', Storage.get({\n      key: 'todosSet'\n    }));\n    const valueToGet = Storage.get({\n      key: 'todosSet'\n    });\n  };\n\n  return {\n    createItem,\n    tableauToDo\n  };\n}","map":{"version":3,"sources":["/Users/justinluczak/Documents/COURS CNAM 2EME ANNEE/webmobile/Exercice todolist/todolist/src/hooks/useToDoList.ts"],"names":["TODO_STORAGE","tableauToDo","useToDoList","createItem","itemValue","console","log","push","map","value","index","Storage","set","key","JSON","stringify","id","name","ret","get","valueToGet"],"mappings":"AAGA;AAKA,MAAMA,YAAY,GAAG,OAArB;AACA,MAAMC,WAAqB,GAAG,EAA9B;AAGA,OAAO,SAASC,WAAT,GAAuB;AAE1B,QAAMC,UAAU,GAAIC,SAAD,IAAuB;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,SAAjC;AACAH,IAAAA,WAAW,CAACM,IAAZ,CAAiBH,SAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ,EAHsC,CAKtC;;AACAA,IAAAA,WAAW,CAACO,GAAZ,CAAgB,CAACC,KAAD,EAAQC,KAAR,KAAkBC,OAAO,CAACC,GAAR,CAAY;AAC1CC,MAAAA,GAAG,EAAE,OADqC;AAE1CJ,MAAAA,KAAK,EAAEK,IAAI,CAACC,SAAL,CAAe;AAClBC,QAAAA,EAAE,EAAEN,KADc;AAElBO,QAAAA,IAAI,EAAER;AAFY,OAAf;AAFmC,KAAZ,CAAlC;AAQA,UAAMS,GAAG,GAAGP,OAAO,CAACQ,GAAR,CAAY;AAAEN,MAAAA,GAAG,EAAE;AAAP,KAAZ,CAAZ;AAEAR,IAAAA,OAAO,CAACC,GAAR,CAAYK,OAAO,CAACQ,GAAR,CAAY;AAAEN,MAAAA,GAAG,EAAE;AAAP,KAAZ,CAAZ,EAhBsC,CAmBtC;;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY;AACRC,MAAAA,GAAG,EAAE,UADG;AAERJ,MAAAA,KAAK,EAAEK,IAAI,CAACC,SAAL,CAAed,WAAf;AAFC,KAAZ;AAKAI,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BK,OAAO,CAACQ,GAAR,CAAY;AAAEN,MAAAA,GAAG,EAAE;AAAP,KAAZ,CAA9B;AAGA,UAAMO,UAAU,GAAGT,OAAO,CAACQ,GAAR,CAAY;AAAEN,MAAAA,GAAG,EAAE;AAAP,KAAZ,CAAnB;AAEH,GA9BD;;AAoCA,SAAO;AACHV,IAAAA,UADG;AACSF,IAAAA;AADT,GAAP;AAIH","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { isPlatform } from '@ionic/react';\nimport { Plugins } from '@capacitor/core';\n//import { IonInput } from '@ionic/react';\n\nimport { useStorage } from '@capacitor-community/react-hooks/storage'\n\n\nconst TODO_STORAGE = \"todos\";\nconst tableauToDo: string[] = [];\n\n\nexport function useToDoList() {\n\n    const createItem = (itemValue: string) => {\n        console.log('Le texte envoyé :', itemValue)\n        tableauToDo.push(itemValue)\n        console.log(tableauToDo)\n\n        //Ne prends que la dernière entrée en compte\n        tableauToDo.map((value, index) => Storage.set({\n            key: 'todos',\n            value: JSON.stringify({\n                id: index,\n                name: value\n            })\n        }))\n\n        const ret = Storage.get({ key: 'todos' })\n\n        console.log(Storage.get({ key: 'todos' }))\n\n\n        //Prends en compte plusieurs entrées mais écrase toujours les données précédentes\n        Storage.set({\n            key: 'todosSet',\n            value: JSON.stringify(tableauToDo)\n        });\n\n        console.log('todo SetObject', Storage.get({ key: 'todosSet' }))\n\n\n        const valueToGet = Storage.get({ key: 'todosSet' })\n\n    }\n\n   \n\n\n\n    return {\n        createItem, tableauToDo\n    }\n\n}\n\n\nexport interface ToDoList {\n    filepath: string;\n    webviewPath?: string;\n}"]},"metadata":{},"sourceType":"module"}